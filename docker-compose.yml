version: '3'

services:

  client:
    image: node:alpine
    command: sh -c 'yarn install && yarn dev'
    volumes:
        - ./client:/client:cached
    ports:
        - 3000:3000
    environment:
      CLIENT_ENV: development
    stdin_open: true
    working_dir: /client
    container_name: patchup-client
    networks:
      - patchup-network   

  server:
    build: ./server
    command: sh -c 'cargo watch -x run'
    volumes:
        - ./server:/server:cached
    ports:
        - 8080:8080
    environment:
      DATABASE_URL: postgres://postgres:postgres@database:5432/postgres
    container_name: patchup-server
    working_dir: /server
    networks:
      - patchup-network

  database:
    image: 'postgres:13-alpine'
    ports:
      - 5432:5432
    volumes:
      - ./.database:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    container_name: patchup-database
    networks:
      - patchup-network

  aws:
    image: 'localstack/localstack:latest'
    ports: 
      - 4563-4584:4563-4584
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - EXTRA_CORS_ALLOWED_HEADERS=access-control-allow-headers,content-disposition
    volumes:
      - ./.aws:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: patchup-aws
    networks:
      - patchup-network

networks:
  patchup-network:
    driver: bridge
